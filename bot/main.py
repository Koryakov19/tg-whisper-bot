import os
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from dotenv import load_dotenv
from transcriber.whisper_runner import transcribe
from pydub import AudioSegment

load_dotenv()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ –∏–ª–∏ –∞—É–¥–∏–æ.")

async def handle_voice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    file = await context.bot.get_file(update.message.voice.file_id)
    ogg_path = f"audio/raw/{update.message.message_id}.ogg"
    wav_path = ogg_path.replace(".ogg", ".wav")

    await file.download_to_drive(ogg_path)
    await update.message.reply_text(f"–°–æ—Ö—Ä–∞–Ω–∏–ª –≥–æ–ª–æ—Å–æ–≤–æ–µ –∫–∞–∫ {ogg_path}")

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ WAV
    audio = AudioSegment.from_file(ogg_path)
    audio.export(wav_path, format="wav")

    text = transcribe(wav_path)
    await update.message.reply_text(f"üìù –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:\n{text}")

async def handle_audio(update: Update, context: ContextTypes.DEFAULT_TYPE):
    file = await context.bot.get_file(update.message.audio.file_id)
    mp3_path = f"audio/raw/{update.message.message_id}.mp3"
    wav_path = mp3_path.replace(".mp3", ".wav")

    await file.download_to_drive(mp3_path)
    await update.message.reply_text(f"–°–æ—Ö—Ä–∞–Ω–∏–ª –∞—É–¥–∏–æ –∫–∞–∫ {mp3_path}")

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ WAV
    audio = AudioSegment.from_file(mp3_path)
    audio.export(wav_path, format="wav")

    text = transcribe(wav_path)
    await update.message.reply_text(f"üìù –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:\n{text}")

def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    token = os.getenv("BOT_TOKEN")
    if not token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        return

    app = ApplicationBuilder().token(token).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.VOICE, handle_voice))
    app.add_handler(MessageHandler(filters.AUDIO | filters.Document.AUDIO, handle_audio))

    print("ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–∞–∂–º–∏ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    app.run_polling()

if __name__ == "__main__":
    main()
